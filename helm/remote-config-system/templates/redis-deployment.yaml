{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "remote-config-system.fullname" . }}-redis
  labels:
    {{- include "remote-config-system.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      {{- include "remote-config-system.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "remote-config-system.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "remote-config-system.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            - --appendonly
            - "yes"
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.targetPort }}
              protocol: TCP
          {{- if .Values.redis.healthCheck.enabled }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: {{ .Values.redis.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.redis.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.redis.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.redis.healthCheck.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: {{ .Values.redis.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.redis.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.redis.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.redis.healthCheck.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "remote-config-system.fullname" . }}-redis-data
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
